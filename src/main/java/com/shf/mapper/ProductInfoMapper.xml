<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shf.mapper.ProductInfoMapper">
    <resultMap id="BaseResultMap" type="com.shf.pojo.ProductInfo">
        <id column="p_id" property="pId" jdbcType="INTEGER"/>
        <result column="p_name" property="pName" jdbcType="VARCHAR"/>
        <result column="p_content" property="pContent" jdbcType="VARCHAR"/>
        <result column="p_price" property="pPrice" jdbcType="INTEGER"/>
        <result column="p_image" property="pImage" jdbcType="VARCHAR"/>
        <result column="p_number" property="pNumber" jdbcType="INTEGER"/>
        <result column="type_id" property="typeId" jdbcType="INTEGER"/>
        <result column="p_date" property="pDate" jdbcType="DATE"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    p_id, p_name, p_content, p_price, p_image, p_number, type_id, p_date
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shf.pojo.ProductInfoExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from product_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from product_info
        where p_id = #{pId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product_info
    where p_id = #{pId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.shf.pojo.ProductInfoExample">
        delete from product_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.shf.pojo.ProductInfo">
    insert into product_info (p_id, p_name, p_content,
      p_price, p_image, p_number,
      type_id, p_date)
    values (#{pId,jdbcType=INTEGER}, #{pName,jdbcType=VARCHAR}, #{pContent,jdbcType=VARCHAR},
      #{pPrice,jdbcType=INTEGER}, #{pImage,jdbcType=VARCHAR}, #{pNumber,jdbcType=INTEGER},
      #{typeId,jdbcType=INTEGER}, #{pDate,jdbcType=DATE})
  </insert>
    <insert id="insertSelective" parameterType="com.shf.pojo.ProductInfo">
        insert into product_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pId != null">
                p_id,
            </if>
            <if test="pName != null">
                p_name,
            </if>
            <if test="pContent != null">
                p_content,
            </if>
            <if test="pPrice != null">
                p_price,
            </if>
            <if test="pImage != null">
                p_image,
            </if>
            <if test="pNumber != null">
                p_number,
            </if>
            <if test="typeId != null">
                type_id,
            </if>
            <if test="pDate != null">
                p_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pId != null">
                #{pId,jdbcType=INTEGER},
            </if>
            <if test="pName != null">
                #{pName,jdbcType=VARCHAR},
            </if>
            <if test="pContent != null">
                #{pContent,jdbcType=VARCHAR},
            </if>
            <if test="pPrice != null">
                #{pPrice,jdbcType=INTEGER},
            </if>
            <if test="pImage != null">
                #{pImage,jdbcType=VARCHAR},
            </if>
            <if test="pNumber != null">
                #{pNumber,jdbcType=INTEGER},
            </if>
            <if test="typeId != null">
                #{typeId,jdbcType=INTEGER},
            </if>
            <if test="pDate != null">
                #{pDate,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.shf.pojo.ProductInfoExample" resultType="java.lang.Integer">
        select count(*) from product_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map">
        update product_info
        <set>
            <if test="record.pId != null">
                p_id = #{record.pId,jdbcType=INTEGER},
            </if>
            <if test="record.pName != null">
                p_name = #{record.pName,jdbcType=VARCHAR},
            </if>
            <if test="record.pContent != null">
                p_content = #{record.pContent,jdbcType=VARCHAR},
            </if>
            <if test="record.pPrice != null">
                p_price = #{record.pPrice,jdbcType=INTEGER},
            </if>
            <if test="record.pImage != null">
                p_image = #{record.pImage,jdbcType=VARCHAR},
            </if>
            <if test="record.pNumber != null">
                p_number = #{record.pNumber,jdbcType=INTEGER},
            </if>
            <if test="record.typeId != null">
                type_id = #{record.typeId,jdbcType=INTEGER},
            </if>
            <if test="record.pDate != null">
                p_date = #{record.pDate,jdbcType=DATE},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update product_info
        set p_id = #{record.pId,jdbcType=INTEGER},
        p_name = #{record.pName,jdbcType=VARCHAR},
        p_content = #{record.pContent,jdbcType=VARCHAR},
        p_price = #{record.pPrice,jdbcType=INTEGER},
        p_image = #{record.pImage,jdbcType=VARCHAR},
        p_number = #{record.pNumber,jdbcType=INTEGER},
        type_id = #{record.typeId,jdbcType=INTEGER},
        p_date = #{record.pDate,jdbcType=DATE}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.shf.pojo.ProductInfo">
        update product_info
        <set>
            <if test="pName != null">
                p_name = #{pName,jdbcType=VARCHAR},
            </if>
            <if test="pContent != null">
                p_content = #{pContent,jdbcType=VARCHAR},
            </if>
            <if test="pPrice != null">
                p_price = #{pPrice,jdbcType=INTEGER},
            </if>
            <if test="pImage != null">
                p_image = #{pImage,jdbcType=VARCHAR},
            </if>
            <if test="pNumber != null">
                p_number = #{pNumber,jdbcType=INTEGER},
            </if>
            <if test="typeId != null">
                type_id = #{typeId,jdbcType=INTEGER},
            </if>
            <if test="pDate != null">
                p_date = #{pDate,jdbcType=DATE},
            </if>
        </set>
        where p_id = #{pId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.shf.pojo.ProductInfo">
    update product_info
    set p_name = #{pName,jdbcType=VARCHAR},
      p_content = #{pContent,jdbcType=VARCHAR},
      p_price = #{pPrice,jdbcType=INTEGER},
      p_image = #{pImage,jdbcType=VARCHAR},
      p_number = #{pNumber,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      p_date = #{pDate,jdbcType=DATE}
    where p_id = #{pId,jdbcType=INTEGER}
  </update>
    <!--
    批量删除商品的功能 int deleteBatch(String... ids);
    -->
    <delete id="deleteBatch">
        delete from product_info where p_id in
        <foreach collection="array" item="pid" separator="," open="(" close=")">
            #{pid}
        </foreach>
    </delete>
    <!--
    多条件查询 拼接
    List<ProductInfo> selectCondition(ProductInfoVo vo);
    -->
    <select id="selectCondition" resultType="com.shf.pojo.ProductInfo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from product_info
        <!--拼接条件-->
        <where>
            <!--商品名称不为空,拼接商品名称模糊查询-->
            <if test="pname!=null and pname !='' ">
                and p_name like '%${pname}%'
            </if>
            <!--商品类型不为空,拼接商品类型查询-->
            <if test="typeid !=null and typeid !=-1 ">
                and type_id = #{typeid}
            </if>
            <!--如果最低价格不为空 且大于0(vo在类中实现),最高价格为空,则查询大于最低价格的所有商品-->
            <if test="lprice != null  and hprice == null">
                and p_price &gt;= #{lprice}
            </if>
            <!--如果最低价格为空,最高价格不为空 且大于0,则查询小于最高价格的所有商品-->
            <if test="lprice == null and hprice != null ">
                and p_price &lt;= #{hprice}
            </if>
            <!--如果最低价格不为空,最高价格不为空,则查询介于最高价格和最低价格之间的所有商品-->
            <if test="lprice != null and hprice != null ">
                and p_price between #{lprice} and #{hprice}
            </if>
        </where>
        order by p_id desc
    </select>
</mapper>
